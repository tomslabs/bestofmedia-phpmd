<?xml version="1.0" encoding="UTF-8"?>
<project name="PHP_PMD" basedir=".">

    <!--
        Include local project properties.
    -->
    <property file="build.properties" />

    <!--
        Import common build targets
    -->
	<import file="${basedir}/setup/src/main/xml/base.xml" />

    <!--
        Hook that will be called after we have copied the project's library
        directory.

        Parameters:
            output.dir      Output directory for the temporary build tree.
            library.dir     The library directory in the temporary build tree.
    -->
    <target name="~copy-vendor-dir-after">
        <delete includeemptydirs="true">
            <fileset dir="${vendor.dir}/pdepend">
                <exclude name="pdepend/src/main/**" />
            </fileset>
        </delete>
    </target>

    <!--
        Hook method for copying files for the project's xyz archive format.

      Parameters:
          output.dir      Output directory for the temporary build tree.
  -->
  <target name="do-copy-files-for-xyz-archive">
    <copy todir="${output.dir}/resources/rulesets">
      <fileset dir="${commons.srcdir.resource}/rulesets" />
    </copy>
  </target>

<!-- Hard to explain.
  The fact is that PHPMDÂ configuration is stored in /usr/share/php/share/PHP_PMD/
  and that any doc file that we could ship would be put in /usr/share/php/share/PHP_PMD_BestOfMedia/

  The idea is to trick PEAR installer by installing PSEUDO php file in this directory
  For that we need to alter the manifesto accordingly.
  -->
  <target name="-pear:manifest-after~hooked" extensionOf="-pear:manifest-after~hook">
    <echo message="Patching the crap out of the manifesto" />

    <exec executable="${commons.executable.php}" failonerror="true">
      <arg value="src/main/resources/extensions/pear/forceRulesetInsidePHPMD.php" />
      <arg value="${pear.manifest.file}" />
    </exec>
  </target>

</project>